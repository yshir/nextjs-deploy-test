name: Auto Deploy

on:
  push:
    branches:
      - master

env:
  S3_REGION: ap-northeast-1
  S3_BUCKET: nextjs-deploy-test--serverless-state
  CLIENT_PATH: ".serverless"

jobs:
  deploy-prod:
    name: Auto Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # - name: Rename serverless.yml
      #   uses: canastro/copy-file-action@master
      #   with:
      #     source: "serverless-prod.yml"
      #     target: "serverless.yml"

      - name: Install dependencies
        run: |
          npm i -g serverless
          npm ci

      - name: Serverless AWS authentication
        run: |
          serverless --component=serverless-next config credentials \
            --provider aws \
            --key ${{ secrets.AWS_ACCESS_KEY_ID }} \
            --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Download `.serverless` state from s3
        run: aws s3 sync $S3_PATH $CLIENT_PATH --delete && true
        env:
          S3_PATH: s3://${{ env.S3_BUCKET }}/prod/.serverless
          CLIENT_PATH: ${{ env.CLIENT_PATH }}

      - name: Deploy to AWS
        run: serverless

      - name: Create s3 bucket if not exists
        run: |
          if ! aws s3api head-bucket --bucket $S3_BUCKET 2>/dev/null; then
            aws s3api create-bucket \
              --bucket $S3_BUCKET \
              --region $S3_REGION \
              --create-bucket-configuration LocationConstraint=$S3_REGION
          fi
        env:
          S3_BUCKET: ${{ env.S3_BUCKET }}
          S3_REGION: ${{ env.S3_REGION }}

      - name: Upload `.serverless` state to s3
        run: aws s3 sync $CLIENT_PATH $S3_PATH --delete
        env:
          CLIENT_PATH: ${{ env.CLIENT_PATH }}
          S3_PATH: s3://${{ env.S3_BUCKET }}/prod/.serverless

      - name: Notify result to slack
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: '*Deploy to AWS*'
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
